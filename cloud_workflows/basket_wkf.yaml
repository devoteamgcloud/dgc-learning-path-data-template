- init:
    assign:
    - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
    - util_bucket_suffix: "magasin-cie-utils"
    - create_disposition: "CREATE_NEVER"
    - write_disposition: "WRITE_TRUNCATE"
### BASKET ###
###insert raw_basket >> staging_basket
- get_staging_basket_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "_" + util_bucket_suffix + "/queries/staging/basket.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: staging_basket_response
- insert_staging_basket:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${text.replace_all(staging_basket_response.body, "{{ project_id }}", project_id)}
            destinationTable:
              projectId: ${project_id}
              datasetId: staging
              tableId: basket
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
###merge staging_basket >> cleaned_basket_header
- get_basket_header_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "_" + util_bucket_suffix + "/queries/cleaned/basket_detail.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: cleaned_basket_header_response
- merge_basket_header:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${text.replace_all(cleaned_basket_header_response.body, "{{ project_id }}", project_id)}
            destinationTable:
              projectId: ${project_id}
              datasetId: cleaned
              tableId: basket_header
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
###insert cleaned_basket_header >> aggregated_customer_purchase
- get_customer_purchase_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "_" + util_bucket_suffix + "/queries/aggregated/customer_purchase.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: aggregated_basket_customer_purchase
- insert_customer_purchase:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${text.replace_all(cleaned_basket_header_response.body, "{{ project_id }}", project_id)}
            destinationTable:
              projectId: ${project_id}
              datasetId: aggregated
              tableId: customer_purchase
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
###insert cleaned_basket_header >> aggregated_day_sale
- get_day_sale_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "_" + util_bucket_suffix + "/queries/aggregated/day_sale.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: aggregated_day_sale
- insert_day_sale:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${text.replace_all(cleaned_basket_header_response.body, "{{ project_id }}", project_id)}
            destinationTable:
              projectId: ${project_id}
              datasetId: aggregated
              tableId: day_sale
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
### BASKET_DETAIL ###
###insert raw_basket >> staging_basket_detail
- get_staging_basket_detail_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "_" + util_bucket_suffix + "/queries/staging/basket_detail.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: staging_basket_detail_response
- insert_staging_basket_detail:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${text.replace_all(staging_basket_detail_response.body, "{{ project_id }}", project_id)}
            destinationTable:
              projectId: ${project_id}
              datasetId: staging
              tableId: basket
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
###merge staging_basket_detail >> cleaned_basket_detail
- get_basket_detail_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "_" + util_bucket_suffix + "/queries/cleaned/basket_detail.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: cleaned_basket_detail_response
- merge_basket_detail:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${text.replace_all(cleaned_basket_header_response.body, "{{ project_id }}", project_id)}
            destinationTable:
              projectId: ${project_id}
              datasetId: cleaned
              tableId: basket_detail
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
###insert cleaned_basket_detail >> aggregated_best_product_sale
- get_best_product_sale_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "_" + util_bucket_suffix + "/queries/aggregated/best_product_sale.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: aggregated_best_product_sale_response
- insert_best_product_sale:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${text.replace_all(cleaned_basket_header_response.body, "{{ project_id }}", project_id)}
            destinationTable:
              projectId: ${project_id}
              datasetId: aggregated
              tableId: best_product_sale
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
- the_end:
    return: "SUCCESS"